ext {
    def kotlinVersion = '1.8.10'
    def coroutinesVersion = '1.7.3'
    def coreKtxVersion = '1.9.0'
    def appCompatVersion = '1.6.1'
    def annotationsVersion = '1.7.0'
    def navigationVersion = '2.5.3'
    def recyclerViewVersion = '1.3.2'
    def gridLayoutVersion = '1.0.0'
    def constraintLayoutVersion = '2.1.4'
    def lifecycleVersion = '2.6.1'
    def fragmentVersion = '1.6.1'
    def archCoreVersion = '2.1.0'
    def androidJunitTestVersion = '1.1.3'
    def materialDesignVersion = '1.9.0'
    def composeBoMVersion = '2023.06.01'
    def junitVersion = '4.13.2'
    def mockito = '3.9.0'
    def mockitoKotlinVersion = '3.2.0'
    def hamcrest = '1.3'
    def assertJVersion = '3.11.1'
    def turbineFlowTestVersion = '1.0.0'
    def okHttpBoMVersion = '4.10.0'
    def retrofitVersion = '2.9.0'
    def coilVersion = '2.2.2'

    kotlin = [
            kotlin       : "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",
            kotlinJdk8   : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion",
            kotlinReflect: "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    ]

    coroutines = [
            core    : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion",
            android : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion",
    ]
    coroutinesTest = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    flowTest = "app.cash.turbine:turbine:$turbineFlowTestVersion"

    coreKtx = "androidx.core:core-ktx:$coreKtxVersion"
    appCompat = "androidx.appcompat:appcompat:$appCompatVersion"
    annotations = "androidx.annotation:annotation:$annotationsVersion"
    navigation = [
            fragment: "androidx.navigation:navigation-fragment-ktx:$navigationVersion",
            ui      : "androidx.navigation:navigation-ui-ktx:$navigationVersion",
    ]
    recyclerView = "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    gridLayout = "androidx.gridlayout:gridlayout:$gridLayoutVersion"
    constraintLayout = "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    composeBoM = "androidx.compose:compose-bom:$composeBoMVersion"

    compose = [
            runtime         : "androidx.compose.runtime:runtime",
            ui              : "androidx.compose.ui:ui",
            uiTooling       : "androidx.compose.ui:ui-tooling",
            foundation      : "androidx.compose.foundation:foundation",
            foundationLayout: "androidx.compose.foundation:foundation-layout",
    ]
    composeMaterialDesign = [
            material3 : "androidx.compose.material3:material3",
            windowSize: "androidx.compose.material3:material3-window-size-class",
    ]

    lifecycleExtensions = [
            viewModel: "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion",
            livedata : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion",
            runtime  : "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion",
            common   : "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion",
    ]

    fragment = "androidx.fragment:fragment-ktx:$fragmentVersion"

    materialDesign = "com.google.android.material:material:$materialDesignVersion"

    unitTesting = [
            androidExt     : "androidx.test.ext:junit:$androidJunitTestVersion",
            junit          : "junit:junit:$junitVersion",
            mockito        : "org.mockito:mockito-core:$mockito",
            mockitoKotlin  : "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion",
            hamcrest       : "org.hamcrest:hamcrest-library:$hamcrest",
            assertJ        : "org.assertj:assertj-core:$assertJVersion",
            archCoreTesting: "androidx.arch.core:core-testing:$archCoreVersion"
    ]

    okHttp3BoM = "com.squareup.okhttp3:okhttp-bom:$okHttpBoMVersion"

    okHttp3 = [
            okHttp3       : "com.squareup.okhttp3:okhttp",
            okHttp3Logging: "com.squareup.okhttp3:logging-interceptor",
            urlConnection : "com.squareup.okhttp3:okhttp-urlconnection"
    ]

    retrofit = [
            retrofitRuntime: "com.squareup.retrofit2:retrofit:$retrofitVersion",
            retrofitGson   : "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    ]

    coil = [
            coil   : "io.coil-kt:coil:$coilVersion",
            coilGif: "io.coil-kt:coil-gif:$coilVersion",
    ]
}